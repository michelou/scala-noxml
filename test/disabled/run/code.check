testing: ((x: Int) => x.$plus(ys.length))
result = ((x: Int) => x.+{(x: <?>)Int}(ys.length{Int}){Int}){Int => Int}
testing: (() => {
  val e: Element = new Element("someName");
  e
})
result = (() => {
  val e: Element = new Element{Element}{(name: <?>)Element}("someName"{String("someName")}){Element};
  e{Element}
}{Element}){() => Element}
testing: (() => truc.elem = 6)
result = (() => truc.elem{Int} = 6{Int(6)}{Unit}){() => Unit}
testing: (() => truc.elem = truc.elem.$plus(6))
result = (() => truc.elem{Int} = truc.elem.+{(x: <?>)Int}(6{Int(6)}){Int}{Unit}){() => Unit}
testing: (() => new baz.BazElement("someName"))
result = (() => new baz.BazElement{baz.BazElement}{(name: <?>)baz.BazElement}("someName"{String("someName")}){baz.BazElement}){() => baz.BazElement}
testing: ((x: Int) => x.$plus(ys.length))
result = ((x: Int) => x.+{(x: <?>)Int}(ys.length{Int}){Int}){Int => Int}
